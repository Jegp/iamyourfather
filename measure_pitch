#!/usr/bin/perl

# CALL:  ./measure_pitch ./measure_pitch myspeechfile.wav

# >STDOUT: measurements, >STDERR: data points (unvoiced='-', out-of-range='x')

# copyright Peter Juel Henrichsen, use code freely, but never delete my name

# ------------------------------ settings ----------------------------

($lo,$hi) = (80,300);   # normal F0 range

# ------------------------------ main ----------------------------

$call = "sox -v 0.8 $ARGV[0] -r 10k /tmp/praat$$_$ARGV[0]; ".
        "./praat F0INT_LangProc2.psc /tmp/praat$$_$ARGV[0]; ".
        "cat /tmp/praat$$_$ARGV[0]_PtR.dat; rm /tmp/praat$$_$ARGV[0] ";

$out = join('',`$call`);

for ( $out=~/^\s*candidate \[1\].*?frequency = ([\d\.]*)/smg ) {
  if ($_>=$lo and $_<=$hi) { push(@F0,$_); push(@allsamples, &rnd($_,1)) }
  elsif ($_==0) { $unvoi++; push(@allsamples,'-') }
  else { $anom++, push(@allsamples,'x') };
  $total++
};

map($F0logsum+=log($_),@F0); $F0mean = $#F0>=0? exp($F0logsum/scalar @F0): 0;
map($F0sos+=(($_-$F0mean)**2),@F0);
$F0sdev = $#F0>=0? sqrt($F0sos/scalar @F0): 0;
@sort = sort {$a<=>$b} @F0; $med = &rnd($sort[int($#sort/2)],1);

print STDERR join('', map( &rnd($i+=0.005,3)."\t$_\n",@allsamples ) );

print "---\nPITCH for $ARGV[0]\n".
  " Samples: total=$total, unvoiced=$unvoi, voiced=".scalar(@F0).
  ", anom=$anom\n Statistics: mean=".&rnd($F0mean,1).
  "Hz, med=${med}Hz, sdev=".&rnd($F0sdev,2)."\n---\n";

sub rnd {sprintf "%.$_[1]"."f", $_[0]};

# ------------------------------ the end ----------------------------